popFemale <- popFemale %>%
pivot_longer(-c("age0101"), names_to = "year", values_to = "popx")
FRInseePopulationForecast2016 <- rbind(
popFemale %>% mutate(sex = "female"),
popMale %>% mutate(sex = "male")
)
View(FRInseePopulationForecast2016)
View(FRInseePopulationForecast2016)
?FRInseeMortalityForecast2016
?"FRInseeMortalityForecast2016"
prevMale <- read_excel("data-raw/dd_vqs_tableau_etude_20180228.xlsx",
sheet = "Graphique 2",
range = "A4:I15")
View(prevMale)
View(prevMale)
names(prevMale)[1] <- "limitationtype"
View(prevMale)
View(prevMale)
prevMale <- read_excel("data-raw/dd_vqs_tableau_etude_20180228.xlsx",
sheet = "Graphique 2",
range = "A4:I15")
names(prevMale)[1] <- "limitationtype"
prevMale <- prevMale %>%
pivot_longer(-c("limitationtype"), names_to = "tempage", values_to = "prevalence")
View(prevMale)
View(prevMale)
prevMale <- read_excel("data-raw/dd_vqs_tableau_etude_20180228.xlsx",
sheet = "Graphique 2",
range = "A4:I15")
names(prevMale)[1] <- "limitationtype"
prevMale <- prevMale %>%
pivot_longer(-c("limitationtype"), names_to = "tempage", values_to = "prevalence") %>%
mutate(sex = "male")
prevFemale <- read_excel("data-raw/dd_vqs_tableau_etude_20180228.xlsx",
sheet = "Graphique 2",
range = "A18:I29")
names(prevFemale)[1] <- "limitationtype"
prevFemale <- prevFemale %>%
pivot_longer(-c("limitationtype"), names_to = "tempage", values_to = "prevalence") %>%
mutate(sex = "female")
View(prevFemale)
View(prevFemale)
View(prevMale)
View(prevMale)
substr("60-64 ans",0,2)
FRDreesVQSsurvey2014 <- rbind( prevFemale, prevMale) %>%
mutate(prevalence = prevalence / 100,
age = as.numeric( substr(tempage,0,2) ))
View(FRDreesVQSsurvey2014)
View(FRDreesVQSsurvey2014)
cut(c(60:94),breaks=c(60,65,70,Inf))
?cut
View(FRDreesVQSsurvey2014)
View(FRDreesVQSsurvey2014)
FRDreesVQSsurvey2014 <- rbind( prevFemale, prevMale) %>%
mutate(prevalence = prevalence / 100,
age = as.numeric( substr(tempage,0,2) ),
agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE) )
View(FRDreesVQSsurvey2014)
View(FRDreesVQSsurvey2014)
FRDreesVQSsurvey2014 <- rbind( prevFemale, prevMale) %>%
mutate(prevalence = prevalence / 100,
age = as.numeric( substr(tempage,0,2) ),
agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE) ) %>%
select(-tempage)
View(FRDreesVQSsurvey2014)
View(FRDreesVQSsurvey2014)
prevMale <- read_excel("data-raw/dd_vqs_tableau_etude_20180228.xlsx",
sheet = "Graphique 2",
range = "A4:I15")
names(prevMale)[1] <- "limitationtype"
prevMale <- prevMale %>%
pivot_longer(-c("limitationtype"), names_to = "tempage", values_to = "prevalence") %>%
mutate(sex = "male")
prevFemale <- read_excel("data-raw/dd_vqs_tableau_etude_20180228.xlsx",
sheet = "Graphique 2",
range = "A18:I29")
names(prevFemale)[1] <- "limitationtype"
prevFemale <- prevFemale %>%
pivot_longer(-c("limitationtype"), names_to = "tempage", values_to = "prevalence") %>%
mutate(sex = "female")
FRDreesVQSsurvey2014 <- rbind( prevFemale, prevMale) %>%
mutate(prevalence = prevalence / 100,
sex = as.factor(sex),
age = as.numeric( substr(tempage,0,2) ),
agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE) ) %>%
select(-tempage)
View(FRDreesVQSsurvey2014)
View(FRDreesVQSsurvey2014)
usethis::use_data(FRInseeMortalityForecast2016,
FRInseePopulationForecast2016,
FRDreesVQSsurvey2014,
sullivan,
description_sullivan,
overwrite = T)
# data-raw/healthexpectancies_dataset.R
# Data import and processing pipeline
library(readxl)
library(tidyverse)
# ===================================================================================
# Examples from the sullivan manual (2007 version)
# ===================================================================================
# raw data are downloaded from: https://reves.site.ined.fr/en/resources/computation_online/sullivan/
sullivan <- read_excel("data-raw/sullivan_manual_jun2007.en.xls",
sheet = "Ex 1",
range = "A5:O91")
names(sullivan)[1] <- "year"
names(sullivan)[2] <- "age"
names(sullivan)[12] <- "DFLx"
names(sullivan)[13] <- "DFTx"
names(sullivan)[15] <- "pctDFLEx"
# names(sullivan)
sullivan$age[nrow(sullivan)] <- 85
sullivan <- sullivan %>%
mutate(year = as.numeric(year),
age = as.numeric(age),
sex = as.factor(sex))
names_sullivan <- read_excel("data-raw/sullivan_manual_jun2007.en.xls",
sheet = "Ex 1",
range = "A4:O4")
description_sullivan <- data.frame(
heading = names(sullivan),
description = names(names_sullivan)
)
# tab <- sullivan %>% select(year,age,Px,Dx,pix)
# tab <- rbind(tab %>% mutate(sex="male"), tab %>% mutate(sex="female"))
# ===================================================================================
# Forecasted mortality rates for men and women, from Insee's 2016 population forecast
# ===================================================================================
# raw data are downloaded from: https://www.insee.fr/fr/statistiques/2496793
mortalityMale <- read_excel("data-raw/irsocprojpop1370_FECcentESPcentMIGcent.xls",
sheet = "hyp_mortaliteH",
range = "A5:BG126")
names(mortalityMale) <- c("age3112", tail(names(mortalityMale),-1) )
mortalityMale <- mortalityMale %>%
pivot_longer(-c("age3112"), names_to = "year", values_to = "qx") %>%
mutate(qx = qx/10000 )
mortalityFemale <- read_excel("data-raw/irsocprojpop1370_FECcentESPcentMIGcent.xls",
sheet = "hyp_mortaliteF",
range = "A5:BG126")
names(mortalityFemale) <- c("age3112", tail(names(mortalityFemale),-1) )
mortalityFemale <- mortalityFemale %>%
pivot_longer(-c("age3112"), names_to = "year", values_to = "qx") %>%
mutate(qx = qx/10000 )
FRmortalityForecast2016 <- rbind(
mortalityFemale %>% mutate(sex = "female"),
mortalityMale %>% mutate(sex = "male")
)
# transform dataset from age at the end of the year to age at last birthday
FRInseeMortalityForecast2016 <- rbind(
FRmortalityForecast2016 %>% mutate(qx = qx/2, age = age3112),
FRmortalityForecast2016 %>% mutate(qx = qx/2, age = pmax(0,age3112-1) )
) %>%
select(-age3112) %>%
group_by(year,sex,age) %>%
summarise_all(sum) %>%
ungroup()
# essaiInsee <- FRInseeMortalityForecast2016 %>% mutate(pix = (age/150)^2, mx = qx) %>% filter(year %in% c(2013,2015,2020,2030))
# ===================================================================================
# Forecasted populations, from Insee's 2016 population forecast
# ===================================================================================
# raw data are downloaded from: https://www.insee.fr/fr/statistiques/2496793
popMale <- read_excel("data-raw/irsocprojpop1370_FECcentESPcentMIGcent.xls",
sheet = "populationH",
range = "A5:BG126")
names(popMale) <- c("age0101", tail(names(popMale),-1) )
popMale <- popMale %>%
pivot_longer(-c("age0101"), names_to = "year", values_to = "popx")
popFemale <- read_excel("data-raw/irsocprojpop1370_FECcentESPcentMIGcent.xls",
sheet = "populationF",
range = "A5:BG126")
names(popFemale) <- c("age0101", tail(names(popFemale),-1) )
popFemale <- popFemale %>%
pivot_longer(-c("age0101"), names_to = "year", values_to = "popx")
FRInseePopulationForecast2016 <- rbind(
popFemale %>% mutate(sex = "female"),
popMale %>% mutate(sex = "male")
)
# ===================================================================================
# Disability prevalences after age 60, from DREES' 2014 VQS survey
# ===================================================================================
# data from "graphique 2" can be downloaded on the DREES website: https://drees.solidarites-sante.gouv.fr/etudes-et-statistiques/publications/les-dossiers-de-la-drees/article/incapacites-et-perte-d-autonomie-des-personnes-agees-en-france-une-evolution
prevMale <- read_excel("data-raw/dd_vqs_tableau_etude_20180228.xlsx",
sheet = "Graphique 2",
range = "A4:I15")
names(prevMale)[1] <- "limitationtype"
prevMale <- prevMale %>%
pivot_longer(-c("limitationtype"), names_to = "tempage", values_to = "prevalence") %>%
mutate(sex = "male")
prevFemale <- read_excel("data-raw/dd_vqs_tableau_etude_20180228.xlsx",
sheet = "Graphique 2",
range = "A18:I29")
names(prevFemale)[1] <- "limitationtype"
prevFemale <- prevFemale %>%
pivot_longer(-c("limitationtype"), names_to = "tempage", values_to = "prevalence") %>%
mutate(sex = "female")
FRDreesVQSsurvey2014 <- rbind( prevFemale, prevMale) %>%
mutate(prevalence = prevalence / 100,
sex = as.factor(sex),
age = as.numeric( substr(tempage,0,2) ),
agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE) ) %>%
select(-tempage)
View(FRInseeMortalityForecast2016)
View(FRInseeMortalityForecast2016)
usethis::use_data(FRInseeMortalityForecast2016,
FRInseePopulationForecast2016,
FRDreesVQSsurvey2014,
sullivan,
description_sullivan,
overwrite = T)
essaiVQS <- FRInseeMortalityForecast2016 %>% filter(year==2014, age>=60) %>% mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE))
View(essaiVQS)
View(essaiVQS)
prevVQS <- FRDreesVQSsurvey2014 %>% filter(limitationtype == "GALI") %>% mutate(pix = prevalence) %>% select(agebracket,sex,pix)
View(prevVQS)
View(prevVQS)
essaiVQS <- essaiVQS %>% left_join(prevVQS, by = c("sex","agebracket"))
View(essaiVQS)
View(essaiVQS)
mortalityMale <- read_excel("data-raw/irsocprojpop1370_FECcentESPcentMIGcent.xls",
sheet = "hyp_mortaliteH",
range = "A5:BG126")
names(mortalityMale) <- c("age3112", tail(names(mortalityMale),-1) )
mortalityMale <- mortalityMale %>%
pivot_longer(-c("age3112"), names_to = "year", values_to = "qx") %>%
mutate(qx = qx/10000 )
mortalityFemale <- read_excel("data-raw/irsocprojpop1370_FECcentESPcentMIGcent.xls",
sheet = "hyp_mortaliteF",
range = "A5:BG126")
names(mortalityFemale) <- c("age3112", tail(names(mortalityFemale),-1) )
mortalityFemale <- mortalityFemale %>%
pivot_longer(-c("age3112"), names_to = "year", values_to = "qx") %>%
mutate(qx = qx/10000 )
FRmortalityForecast2016 <- rbind(
mortalityFemale %>% mutate(sex = "female"),
mortalityMale %>% mutate(sex = "male")
) %>%
mutate(sex = as.factor(sex))
# transform dataset from age at the end of the year to age at last birthday
FRInseeMortalityForecast2016 <- rbind(
FRmortalityForecast2016 %>% mutate(qx = qx/2, age = age3112),
FRmortalityForecast2016 %>% mutate(qx = qx/2, age = pmax(0,age3112-1) )
) %>%
select(-age3112) %>%
group_by(year,sex,age) %>%
summarise_all(sum) %>%
ungroup()
# essaiInsee <- FRInseeMortalityForecast2016 %>% mutate(pix = (age/150)^2, mx = qx) %>% filter(year %in% c(2013,2015,2020,2030))
# ===================================================================================
# Forecasted populations, from Insee's 2016 population forecast
# ===================================================================================
# raw data are downloaded from: https://www.insee.fr/fr/statistiques/2496793
popMale <- read_excel("data-raw/irsocprojpop1370_FECcentESPcentMIGcent.xls",
sheet = "populationH",
range = "A5:BG126")
names(popMale) <- c("age0101", tail(names(popMale),-1) )
popMale <- popMale %>%
pivot_longer(-c("age0101"), names_to = "year", values_to = "popx")
popFemale <- read_excel("data-raw/irsocprojpop1370_FECcentESPcentMIGcent.xls",
sheet = "populationF",
range = "A5:BG126")
names(popFemale) <- c("age0101", tail(names(popFemale),-1) )
popFemale <- popFemale %>%
pivot_longer(-c("age0101"), names_to = "year", values_to = "popx")
FRInseePopulationForecast2016 <- rbind(
popFemale %>% mutate(sex = "female"),
popMale %>% mutate(sex = "male")
) %>%
mutate(sex = as.factor(sex))
usethis::use_data(FRInseeMortalityForecast2016,
FRInseePopulationForecast2016,
FRDreesVQSsurvey2014,
sullivan,
description_sullivan,
overwrite = T)
essaiVQS <- FRInseeMortalityForecast2016 %>% filter(year==2014, age>=60) %>% mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE))
prevVQS <- FRDreesVQSsurvey2014 %>% filter(limitationtype == "GALI") %>% mutate(pix = prevalence) %>% select(agebracket,sex,pix)
essaiVQS <- essaiVQS %>% left_join(prevVQS, by = c("sex","agebracket"))
View(essaiVQS)
View(essaiVQS)
#' Complete a dataframe with variables useful for the calculation of disability-free life expectancies (DFLE)
#'
#' Take an input dataset containing some information on age, mortality rates and prevalences
#' of disability (at least 'age', 'qx' or 'mx', and 'pix' must be within the input dataset)
#' and complete it with  variables for life expectancies and disability-free life expectancies.
#' #' If some indispensable variables are missing (eg 'age'), the output is the same as the input dataset.
#'
#' If variables 'sex' and/or 'year' are in the input dataset, calculations are performed for each
#' separate values of 'sex' and/or 'year'.
#'
#' Calculations follow example 1 in the sullivan manual (June 2007 version).
#' See https://reves.site.ined.fr/en/resources/computation_online/sullivan/ for more explanations.
#'
#'
#' @param tab a dataframe containing some of the variables
#'
#' @return a dataframe with all variables that can be calculated from the input dataframe
#' @export
#'
#' @examples CompleteDFLEtable( sullivan[,c("year","age","mx","qx","pix")] )
#' @examples CompleteDFLEtable( FRInseeMortalityForecast2016 %>% mutate(pix = (age/150)^2, mx = qx) %>% filter(year %in% c(2013,2015,2020,2030)) )
CompleteDFLEtable <- function(tab) {
# remove columns with missing values
tab <- tab[,colSums(is.na(tab))==0]
# if 'sex' and/or 'year' are in the input dataset, calculations is made for each values of these 2 variables
if ("sex" %in% names(tab)) {
classsex <- unique(tab$sex)
tab <- tab %>% mutate(sex = as.factor(sex))
if (NROW(classsex)>1)  {
bysex <- function(s){ CompleteDFLEtable(tab[tab$sex == s,]) }
return( do.call(rbind,lapply(classsex,bysex)) )
}
}
if ("year" %in% names(tab)) {
classyear <- unique(tab$year)
tab <- tab %>% mutate(year = as.numeric(year))
if (NROW(classyear)>1)  {
byyear <- function(y){ CompleteDFLEtable(tab[tab$year == y,]) }
return( do.call(rbind,lapply(classyear,byyear)) )
}
}
# creates no variable is age is missing in the input dataset
# NB: in the sullivan manuel, 'x' means 'age'
if (!("age" %in% names(tab)) & ("x" %in% names(tab))) { tab$age <- tab$x }
if (!("age" %in% names(tab))) { return(tab) }
tab <- tab %>% mutate(age = as.numeric(age))
tab <- tab[order(tab$age),]
# adding agewidth : should be equal to 1 if all ages are in the input dataset
if (("age" %in% names(tab)) & !("agewidth" %in% names(tab))) {
tab$agewidth <- c( tail(tab$age,-1), (tail(tab$age,1)+1)) - tab$age
}
# adding central death rate (mx), from Mid-year population (Px) and	No. deaths (Dx)
if (("Px" %in% names(tab)) & ("Dx" %in% names(tab)) & !("mx" %in% names(tab))) {
tab$mx <- tab$Dx / tab$Px
}
# adding conditional probability of death (qx), from central death rate (mx)
if (("mx" %in% names(tab)) & !("qx" %in% names(tab))) {
tab$qx <- tab$mx * tab$agewidth / (1 + 0.5 * tab$agewidth * tab$mx)
}
# alternative : adding central death rate (mx), from conditional probability of death (qx)
if (("qx" %in% names(tab)) & !("mx" %in% names(tab))) {
tab$mx <- tab$qx / tab$agewidth / (1 - 0.5 * tab$qx)
}
# adding number of survivors to age x, from conditional probability of death
if (("qx" %in% names(tab)) & !("lx" %in% names(tab))) {
tab$lx <- 100000 * cumprod(c(1, 1 - utils::head(tab$qx,-1) ))
}
# adding person years lived at age x, from number of survivors to age x
if (("lx" %in% names(tab)) & !("Lx" %in% names(tab))) {
w1 <- c( 0.2, rep(0.5, nrow(tab)-1) )
tab$Lx <- ( w1 * tab$lx +
(1 - w1) * c( utils::tail(tab$lx,-1), 0) ) * tab$agewidth
tab$Lx[nrow(tab)] <- tab$lx[nrow(tab)] / tab$mx[nrow(tab)]
}
# adding total number of years lived  from x, from person years lived at age x
if (("Lx" %in% names(tab)) & !("Tx" %in% names(tab))) {
tab$Tx <- rev( cumsum( rev(tab$Lx) ) )
}
# adding total life expectancy, from total number of years lived and numbers surviving to age x
if (("lx" %in% names(tab)) & ("Tx" %in% names(tab)) & !("ex" %in% names(tab))) {
tab$ex <- tab$Tx / tab$lx
}
# adding person years lived without disability (DFLx), from person years lived at age x (Lx) and proportion with disability (pix)
if (("Lx" %in% names(tab)) & ("pix" %in% names(tab)) & !("DFLx" %in% names(tab))) {
tab$DFLx <- tab$Lx * (1 - tab$pix)
}
# adding person years lived without disability (DFLx), from person years lived at age x (Lx) and proportion with disability (pix)
if (("Lx" %in% names(tab)) & ("pix" %in% names(tab)) & !("DFLx" %in% names(tab))) {
tab$DFLx <- tab$Lx * (1 - tab$pix)
}
# adding total years lived without disability from age x (DFTx), from person years lived without disability (DFLx)
if (("DFLx" %in% names(tab)) & !("DFTx" %in% names(tab))) {
tab$DFTx <- rev( cumsum( rev(tab$DFLx) ) )
}
# adding disability-free life expectancy (DFLEx), from total years lived without disability from age x (DFTx) and numbers surviving to age x
if (("lx" %in% names(tab)) & ("DFTx" %in% names(tab)) & !("DFLEx" %in% names(tab))) {
tab$DFLEx <- tab$DFTx / tab$lx
}
# adding proportion of life spent disability-free (pctDFLEx), from ratio of DFLE and LE at each age x
if (("DFLEx" %in% names(tab)) & ("ex" %in% names(tab)) & !("pctDFLEx" %in% names(tab))) {
tab$pctDFLEx <- 100 * tab$DFLEx / tab$ex
}
# returns enriched dataset
return(tab)
}
truc <- CompleteDFLEtable(essaiVQS)
View(truc)
View(truc)
use_package("shiny")
library(devtools)
use_package("shiny")
use_package("shinydashboard")
install_packages("shinydashboard")
install_package("shinydashboard")
install.packages("shinydashboard")
use_package("shinydashboard")
shiny::runApp('inst/shiny-examples/projprevalence')
library(shiny)
library(shinydashboard)
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
?box
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
unique(FRDreesVQS2016$limitationtype)
library(healthexpectancies)
unique(FRDreesVQS2016$limitationtype)
unique(FR$limitationtype)
unique(FRDreesVQSsurvey2014$limitationtype)
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
?sliderInput
runApp('inst/shiny-examples/projprevalence')
?pivot_longer
library(tidyverse)
?pivot_longer
runApp('inst/shiny-examples/projprevalence')
library(broom)
runApp('inst/shiny-examples/projprevalence')
limessai <- "Au moins une LF"
essai3 <- FRInseePopulationForecast2016 %>%
rename(age = age0101) %>%
mutate(year = as.numeric(year),
age = as.numeric(age),
sex = as.factor(sex)) %>%
filter(year==2015,age>=60) %>%
mutate(year = year-1,
agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE)) %>%
left_join( FRDreesVQSsurvey2014  %>% filter(limitationtype == limessai) %>% select(-age),
by = c("sex","agebracket") ) %>%
mutate(a = age+0.5-60, a2 = a^2, a3 = a^3, a4 = a^4)
donnees <- essai3
runApp('inst/shiny-examples/projprevalence')
fitted_models <- donnees %>% group_by(sex) %>%
do(model = lm(prevalence ~ a + a2 + a3 + a4 , data = ., weights=popx))
resultats <- fitted_models %>% augment(model) %>%
mutate(age=a-0.5+60) %>%
select(sex, age, prevalence, .fitted) %>%
rename(prev.approx = .fitted) %>%
pivot_longer(cols=-c(sex,age),
names_to = "typeprev",
values_to = "prevalence")
View(resultats)
View(resultats)
resultats <- fitted_models %>% augment(model) %>%
ungroup() %>%
mutate(age=a-0.5+60) %>%
select(sex, age, prevalence, .fitted) %>%
rename(prev.approx = .fitted) %>%
pivot_longer(cols=-c(sex,age),
names_to = "typeprev",
values_to = "prevalence")
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
View(resultats)
View(resultats)
prev <- resultats %>%
filter(typeprev == "prev.approx.2014") %>%
rename(pix = prevalence) %>%
select(sex,age,pix)
prev <- resultats %>%
filter(typeprev == "prev.approx") %>%
rename(pix = prevalence) %>%
select(sex,age,pix)
View(prev)
View(prev)
qmort <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c(2014, 2030)) %>%
mutate(mx = qx) %>%
left_join(prev, by = c("sex","age"))
qmort <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c(2014)) %>%
mutate(mx = qx) %>%
left_join(prev, by = c("sex","age"))
View(qmort)
View(qmort)
qmort <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c(2014)) %>%
mutate(mx = qx) %>%
left_join(prev, by = c("sex","age")) %>%
filter(!is.na(qx))
View(qmort)
View(qmort)
qmort <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c(2014)) %>%
mutate(mx = qx) %>%
left_join(prev, by = c("sex","age")) %>%
filter(!is.na(pix), !is.na(qx))
View(qmort)
View(qmort)
ev <- CompleteDFLEtable(qmort)
View(ev)
View(ev)
ev <- CompleteDFLEtable(qmort) %>%
select(sex,age,year,ex,DFLEx,pctDFLEx) %>%
pivot_longer(cols=-c(sex,age,year),
names_to = "indicateur",
values_to = "val")
View(ev)
View(ev)
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
