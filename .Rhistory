View(tab)
View(tab)
tab <- data.frame(a = age) %>%
mutate(a2 = a^2, a3 = a^3, a4 = a^4)
tab <- data.frame(a = age, stringsAsFactors = FALSE) %>%
mutate(a2 = a^2, a3 = a^3, a4 = a^4)
View(tab)
View(tab)
tab <- data.frame(a = age) %>%
mutate(a = as.numeric(a), a2 = a^2, a3 = a^3, a4 = a^4)
View(tab)
View(tab)
tab <- data.frame() %>%
mutate(a = age, a2 = a^2, a3 = a^3, a4 = a^4)
age
tab <- data.frame() %>%
mutate(a = age, a2 = a^2, a3 = a^3, a4 = a^4)
View(tab)
View(tab)
tab <- data.frame() %>%
mutate(a = age)
tab <- data.frame(age)
View(tab)
View(tab)
?data.frame
tab <- data.frame(prevalence)
View(tab)
View(tab)
tab <- data.frame(prevalence) %>%
mutate(a = age, a2 = a^2, a3 = a^3, a4 = a^4)
View(tab)
View(tab)
tab <- data.frame(prevalence)
tab <- data.frame(prevalence) %>%
mutate(a = age)
tab <- data.frame(prevalence) %>%
mutate(a = age)
tab <- data.frame(prevalence) %>%
mutate(a = as.numeric(age), a2 = a^2, a3 = a^3, a4 = a^4)
View(tab)
View(tab)
fitted_models <- tab %>%
do(model = lm(prevalence ~ a + a2 + a3 + a4 , data = ., weights = weight))
coeff <- fitted_models$model[[1]]$coefficients
coeff
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
truc <- fitted_models$model[[1]]$fitted.values
truc
prevalence_to_polynomial <- function (age, prevalence, weight = rep(1,NROW(prevalence)) ) {
if (NROW(age) != NROW(prevalence)) { stop("Error: Different size of input vectors") }
tab <- data.frame(prevalence) %>%
mutate(a = as.numeric(age), a2 = a^2, a3 = a^3, a4 = a^4)
fitted_models <- tab %>%
do(model = lm(prevalence ~ a + a2 + a3 + a4 , data = ., weights = weight))
fitted_models$model[[1]]$fitted.values
}
truc <- prevalence_to_polynomial(age,prevalence)
truc
prevalence_to_polynomial <- function (age, prevalence, weight = rep(1,NROW(prevalence)) ) {
if (NROW(age) != NROW(prevalence)) { stop("Error: Different size of input vectors") }
tab <- data.frame(prevalence) %>%
mutate(a = min(100,as.numeric(age)), a2 = a^2, a3 = a^3, a4 = a^4)
fitted_models <- tab %>%
do(model = lm(prevalence ~ a + a2 + a3 + a4 , data = ., weights = weight))
fitted_models$model[[1]]$fitted.values
}
names(FRDreesVQSsurvey2014)
runApp('inst/shiny-examples/projprevalence')
vyear <- unique( c(2014, 2020, 2025, 2030, 2035, 2040, 2050) )
vyear <- vyear[order(vyear)]
donneesregr <- donnees %>%
mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE)) %>%
filter(year==2014, age>=60) %>%
left_join( FRDreesVQSsurvey2014  %>% filter(limitationtype == "GALI" ) %>% select(-age),
by = c("sex","agebracket") ) %>%
rename(prevalence.ref = prevalence) #%>%
#mutate(a = age+0.5-60, a2 = a^2, a3 = a^3, a4 = a^4)
donnees <- FRInseePopulationForecast2016 %>%
rename(age = age0101) %>%
mutate(year = as.numeric(year),
age = as.numeric(age),
sex = as.factor(sex)) %>%
mutate(year = year-1)
donneesregr <- donnees %>%
mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE)) %>%
filter(year==2014, age>=60) %>%
left_join( FRDreesVQSsurvey2014  %>% filter(limitationtype == input$limtype ) %>% select(-age),
by = c("sex","agebracket") ) %>%
rename(prevalence.ref = prevalence) #%>%
#mutate(a = age+0.5-60, a2 = a^2, a3 = a^3, a4 = a^4)
donneesregr <- donnees %>%
mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE)) %>%
filter(year==2014, age>=60) %>%
left_join( FRDreesVQSsurvey2014  %>% filter(limitationtype == "GALI" ) %>% select(-age),
by = c("sex","agebracket") ) %>%
rename(prevalence.ref = prevalence) #%>%
#mutate(a = age+0.5-60, a2 = a^2, a3 = a^3, a4 = a^4)
View(donneesregr)
View(donneesregr)
prevalencesref <- donneesregr %>% group_by(sex) %>%
mutate(prev.approx = prevalence_to_polynomial(age, prevalence.ref, weight=popx)) %>%
ungroup() %>%
select(sex, age, prev.approx, prevalence.ref)
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
prevalencesref <- donneesregr %>% group_by(sex) %>%
mutate(prev.approx = prevalence_to_polynomial(age, prevalence.ref, weight=popx)) %>%
ungroup() %>%
select(sex, age, prev.approx, prevalence.ref)
View(prevalencesref)
View(prevalencesref)
View(prevalencesref)
View(prevalencesref)
donneesregr<-donneesregr%>%filter(sex="female")
donneesregr<-donneesregr%>%filter(sex=="female")
runApp('inst/shiny-examples/projprevalence')
prevalencesref <- donneesregr %>% group_by(sex) %>%
mutate(prev.approx = prevalence_to_polynomial(age, prevalence.ref, weight=popx)) %>%
ungroup() %>%
select(sex, age, prev.approx, prevalence.ref)
View(prevalencesref)
View(prevalencesref)
prevalencesref <- donneesregr %>%
mutate(prev.approx = prevalence_to_polynomial(age, prevalence.ref, weight=popx)) %>%
select(sex, age, prev.approx, prevalence.ref)
View(prevalencesref)
View(prevalencesref)
runApp('inst/shiny-examples/projprevalence')
donneesregr <- donnees %>%
mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE)) %>%
filter(year==2014, age>=60) %>%
left_join( FRDreesVQSsurvey2014  %>% filter(limitationtype == input$limtype ) %>% select(-age),
by = c("sex","agebracket") ) %>%
rename(prevalence.ref = prevalence) #%>%
#mutate(a = age+0.5-60, a2 = a^2, a3 = a^3, a4 = a^4)
age <- donneesregr$age
prevalence<-donneesregr$prevalence.ref
weight<-donneesregr$popx
View(donneesregr)
View(donneesregr)
(NROW(age) != NROW(prevalence))
tab <- data.frame(prevalence) %>%
mutate(a = min(100,as.numeric(age)), a2 = a^2, a3 = a^3, a4 = a^4)
fitted_models <- tab %>%
do(model = lm(prevalence ~ a + a2 + a3 + a4 , data = ., weights = weight))
fitted_models$model[[1]]$fitted.values
fitted_models$model[[1]]$coefficients
View(tab)
View(tab)
View(donneesregr)
View(donneesregr)
age
tab <- data.frame(prevalence) %>%
mutate(a = min(100,as.numeric(age)), a2 = a^2, a3 = a^3, a4 = a^4)
View(tab)
View(tab)
prevalence_to_polynomial <- function (age, prevalence, weight = rep(1,NROW(prevalence)) ) {
if (NROW(age) != NROW(prevalence)) { stop("Error: Different size of input vectors") }
tab <- data.frame(prevalence) %>%
mutate(a = pmin(100,as.numeric(age)), a2 = a^2, a3 = a^3, a4 = a^4)
fitted_models <- tab %>%
do(model = lm(prevalence ~ a + a2 + a3 + a4 , data = ., weights = weight))
fitted_models$model[[1]]$fitted.values
}
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
names(essai3)
names(essai2)
hypo <- "cstDFLE"
recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPreval" = "pix")
#' Forecasts prevalences of disability and DFLEs
#'
#' Given a table for the reference year with mortality rates and prevalences of disability, and
#' a projection table with mortality rates, the function calculates prevalences and disability-free
#' life expectancies.
#'
#' Projection hypotheses can be one of the following:
#' * 'cstDFLE' : disability-free life expectancies constant in all year
#' * 'cstDLE' : in-disability life expectancies constant in all year
#' * 'cstPreval' : prevalences by age (and sex) constant in all year
#' * 'cstPctDFLE' : share of disability-free life expectancy in total life-expectancy constant
#'
#' @param tabref  a data frame for the reference year, containing variables: year, age, qx (mortality rate) and pix (prevalences) variables (optional: sex)
#' @param tabproj a data frame for projection years, containing variables: year, age, and qx (mortality rate) variables (optional: sex)
#' @param hypo projection hypotheses ('cstDFLE','cstDLE','cstPreval','cstPctDFLE')
#'
#' @return
#' @export
#'
#' @examples
prevalenceForecast <- function(tabref, tabproj, hypo) {
# add : controls
vardim <- intersect( c("sex","age","categ") , names(tabref), names(tabproj) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPreval" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)[,c(vardim,varkeep)]
# forecasted prevalences
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref , by = vardim) )
rbind( tabDFLEref, tabDFLEproj  )
}
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
prevalencesref <- donneesregr %>% group_by(sex) %>%
mutate(prev.approx = case_when(
input$approxPrev ~ prevalence_to_polynomial(age, prevalence.ref, weight=popx),
!input$approxPrev ~ prevalence.ref) ) %>%
ungroup() %>%
select(sex, age, prev.approx, prevalence.ref) %>%
pivot_longer(cols=-c(sex,age),
names_to = "indicateur",
values_to = "prevalence")
prevalencesref <- donneesregr %>% group_by(sex) %>%
mutate(prev.approx = case_when(
TRUE ~ prevalence_to_polynomial(age, prevalence.ref, weight=popx),
FALSE ~ prevalence.ref) ) %>%
ungroup() %>%
select(sex, age, prev.approx, prevalence.ref) %>%
pivot_longer(cols=-c(sex,age),
names_to = "indicateur",
values_to = "prevalence")
View(prevalencesref)
View(prevalencesref)
prev2014 <- prevalencesref %>%
filter(indicateur == "prev.approx") %>%
rename(pix = prevalence) %>%
select(sex,age,pix)
qmort2014 <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c(2014) ) %>%
#mutate(mx = qx) %>%
left_join(prev2014, by = c("sex","age")) %>%
filter(!is.na(pix), !is.na(qx))
View(qmort2014)
View(qmort2014)
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c( vyear[vyear != 2014] ) )
View(qmortproj)
View(qmortproj)
projections <- prevalenceForecast( qmort2014, qmortproj , "cstDFLE")
tabref<-qmort2014
tabproj<-qmortproj
hypo<-"cstDLE"
vardim <- intersect( c("sex","age","categ") , names(tabref), names(tabproj) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPreval" = "pix")
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPreval" = "pix")
vardim
varkeep
projections <- prevalenceForecast( qmort2014, qmortproj , "cstDFLE")
prevalenceForecast <- function(tabref, tabproj, hypo) {
# add : controls
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPreval" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)[,c(vardim,varkeep)]
# forecasted prevalences
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref , by = vardim) )
rbind( tabDFLEref, tabDFLEproj  )
}
projections <- prevalenceForecast( qmort2014, qmortproj , "cstDFLE")
tabDFLEref <- CompleteDFLEtable(tabref)[,c(vardim,varkeep)]
View(tabDFLEref)
View(tabDFLEref)
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref , by = vardim) )
View(tabproj)
View(tabproj)
truc <- tabproj %>% left_join(tabDFLEref , by = vardim)
View(truc)
View(truc)
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref , by = vardim) )
View(tabDFLEproj)
View(tabDFLEproj)
hypo<-"cstDFLE"
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPreval" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)[,c(vardim,varkeep)]
# forecasted prevalences
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref , by = vardim) )
View(tabDFLEproj)
View(tabDFLEproj)
truc <- tabproj %>% left_join(tabDFLEref , by = vardim)
View(truc)
View(truc)
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref , by = vardim) )
View(tabDFLEproj)
View(tabDFLEproj)
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPreval" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)
View(tabDFLEref)
View(tabDFLEref)
# forecasted prevalences
tabDFLEproj <- CompleteDFLEtable( tabproj[,c(vardim,varkeep)] %>% left_join(tabDFLEref , by = vardim) )
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref[,c(vardim,varkeep)] , by = vardim) )
View(tabDFLEproj)
View(tabDFLEproj)
hypo<-"pctPrev"
hypo<-"cstPrev"
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPreval" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)
# forecasted prevalences
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref[,c(vardim,varkeep)] , by = vardim) )
View(tabDFLEproj)
View(tabDFLEproj)
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPrev" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)
# forecasted prevalences
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref[,c(vardim,varkeep)] , by = vardim) )
View(tabDFLEproj)
View(tabDFLEproj)
View(tabDFLEref)
View(tabDFLEref)
View(tabDFLEproj)
View(tabDFLEproj)
truc <- tabproj %>% left_join(tabDFLEref[,c(vardim,varkeep)] , by = vardim)
View(truc)
View(truc)
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c( vyear[vyear != 2014] ) ) #%>%
#mutate(mx = qx) %>%
left_join(EV2014 %>% select(sex,age,DFLEx,DLEx,pctDFLEx,pix), by = c("sex","age")) %>%
filter(!is.na(DFLEx), !is.na(qx))
EV2014 <- CompleteDFLEtable(qmort2014)
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c( vyear[vyear != 2014] ) ) #%>%
#mutate(mx = qx) %>%
left_join(EV2014 %>% select(sex,age,DFLEx,DLEx,pctDFLEx,pix), by = c("sex","age")) %>%
filter(!is.na(DFLEx), !is.na(qx))
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c( vyear[vyear != 2014] ) )
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c( vyear[vyear != 2014] ) ) #%>%
#mutate(mx = qx) %>%
left_join(EV2014 %>% select(sex,age,DFLEx,DLEx,pctDFLEx,pix), by = c("sex","age"))
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c( vyear[vyear != 2014] ) ) %>%
#mutate(mx = qx) %>%
left_join(EV2014 %>% select(sex,age,DFLEx,DLEx,pctDFLEx,pix), by = c("sex","age")) %>%
filter(!is.na(DFLEx), !is.na(qx))
View(qmortproj)
View(qmortproj)
qmortproj <- qmortproj %>% select(-c(DLEx,pctDFLEx,pix))
View(qmortproj)
View(qmortproj)
EVproj <- CompleteDFLEtable(qmortproj)
View(EVproj)
View(EVproj)
View(truc)
View(truc)
View(tabDFLEref)
View(tabDFLEref)
prevalenceForecast <- function(tabref, tabproj, hypo) {
# add : controls
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPrev" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)
# forecasted prevalences
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref[,c(vardim,varkeep)] , by = vardim) )
rbind( tabDFLEref[,c(vardim,"year","pix","DFLEx","DLEx","pctDFLEx")],
tabDFLEproj[,c(vardim,"year","pix","DFLEx","DLEx","pctDFLEx")] )
}
runApp('inst/shiny-examples/projprevalence')
donneesregr <- donnees %>%
mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE)) %>%
filter(year==2014, age>=60) %>%
left_join( FRDreesVQSsurvey2014  %>% filter(limitationtype == input$limtype ) %>% select(-age),
by = c("sex","agebracket") ) %>%
rename(prevalence.ref = prevalence)
donneesregr <- donnees %>%
mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE)) %>%
filter(year==2014, age>=60) %>%
left_join( FRDreesVQSsurvey2014  %>% filter(limitationtype == "GALI" ) %>% select(-age),
by = c("sex","agebracket") ) %>%
rename(prevalence.ref = prevalence)
prevalencesref <- donneesregr %>% group_by(sex) %>%
mutate(prev.approx = case_when(
TRUE ~ prevalence_to_polynomial(age, prevalence.ref, weight=popx),
FALSE ~ prevalence.ref) ) %>%
ungroup() %>%
select(sex, age, prev.approx, prevalence.ref) %>%
pivot_longer(cols=-c(sex,age),
names_to = "indicateur",
values_to = "prevalence")
prev2014 <- prevalencesref %>%
filter(indicateur == "prev.approx") %>%
rename(pix = prevalence) %>%
select(sex,age,pix)
qmort2014 <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c(2014) ) %>%
#mutate(mx = qx) %>%
left_join(prev2014, by = c("sex","age")) %>%
filter(!is.na(pix), !is.na(qx))
View(qmort2014)
View(qmort2014)
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, year %in% c( vyear[vyear != 2014] ) )
View(qmortproj)
View(qmortproj)
projections <- prevalenceForecast( qmort2014, qmortproj , input$optionProj)
projections <- prevalenceForecast( qmort2014, qmortproj , "cstDFLE")
tabref<-qmort2014
tabproj<-qmortproj
hypo<-"cstDFLE"
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPrev" = "pix")
tabDFLEref <- CompleteDFLEtable(tabref)
tabDFLEproj <- CompleteDFLEtable( tabproj %>% left_join(tabDFLEref[,c(vardim,varkeep)] , by = vardim) )
View(tabDFLEproj)
View(tabDFLEproj)
truc <- tabproj %>% left_join(tabDFLEref[,c(vardim,varkeep)] , by = vardim)
View(truc)
View(truc)
View(qmort2014)
View(qmort2014)
View(qmortproj)
View(qmortproj)
tabproj <- tabproj %>% left_join(tabDFLEref[,c(vardim,varkeep)] , by = c(vardim) )
View(tabproj)
View(tabproj)
tabproj<-qmortproj
tabproj <- tabproj %>%
filter(age %in% c( unique(tabref$age))) %>%
left_join(tabDFLEref[,c(vardim,varkeep)] , by = c(vardim) )
tabDFLEproj <- CompleteDFLEtable( )
tabDFLEproj <- CompleteDFLEtable( tabproj )
View(tabDFLEproj)
View(tabDFLEproj)
prevalenceForecast <- function(tabref, tabproj, hypo) {
# add : controls
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPrev" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)
# forecasted prevalences
tabproj <- tabproj %>%
filter(age %in% c( unique(tabref$age))) %>%
left_join(tabDFLEref[,c(vardim,varkeep)] , by = c(vardim) )
tabDFLEproj <- CompleteDFLEtable( tabproj )
rbind( tabDFLEref[,c(vardim,"year","pix","DFLEx","DLEx","pctDFLEx")],
tabDFLEproj[,c(vardim,"year","pix","DFLEx","DLEx","pctDFLEx")] )
}
runApp('inst/shiny-examples/projprevalence')
